[tool.poetry]
name = "api"
version = "0.1.0"
description = ""
authors = ["Samuel Kopecky <samuel.kopecky@heureka.cz>"]


# TODO: reduce dependecies
[tool.poetry.dependencies]
python = "^3.10"
fastapi = "0.99.1"
starlette = "0.27.0"
pydantic = "1.10.10"
typer = "0.9.0"
asyncpg = "0.27.0"
SQLAlchemy = {extras = ["mypy"], version = "2.0.19"}
uvicorn = {extras = ["standard"], version = "0.22.0"}
alembic = "1.11.1"
orjson = "3.9.1"
pendulum = "2.1.2"
psycopg2-binary = "2.9.6"
aio_pika = "9.1.3"
redis = {extras = ["hiredis"], version = "4.6.0"}
pyhumps = "3.8.0"
SQLAlchemy-Utils = "0.40.0"
python-json-logger = "2.0.7"
httpx = {extras = ["http2"], version = "0.23.3"}
uvloop = "^0.17.0"
sentry-sdk = {extras = ["fastapi"], version = "1.15.0"}
python-jose = "3.3.0"
prometheus-client = "0.17.0"
cryptography = "~40.0"

[tool.poetry.dev-dependencies]
pytest = "7.4.0"
black = "23.3.0"
isort = "5.12.0"
mypy = "1.4.1"
pylint = "2.14.5"
flake8 = "6.0.0"
autoflake = "2.1.1"
pytest-cov = "4.0.0"
pytest-mock = "3.8.2"
requests = "^2.28.1"
pytest-asyncio = "^0.19.0"
ipython = "^8.4.0"
asyncpg-stubs = "0.27.0"
types-sqlalchemy-utils = "^1.0.1"
types-redis="4.5.4.1"
types-pika = "^1.2.0b1"
types-requests = "^2.23.0.1"
freezegun = "^1.2.2"
Flake8-pyproject = "1.2.3"
pylint-pydantic = "0.1.8"

[[tool.poetry.source]]
name = "internal-pypi"
url = "https://pypi.heu.cz/root/production/+simple/"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.black]
target-version = ['py310']


[tool.mypy]
python_version = "3.10"
warn_redundant_casts = true
warn_unused_ignores = true
plugins = [
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin",
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true


[tool.pylint.master]
ignore = "tests"
ignored-argument-names = "_.*|args|kwargs"
persistent = "no"
extension-pkg-whitelist = ["pydantic", "orjson"]

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "duplicate-code",
    "too-few-public-methods",
    "fixme",  # TO DO availability
    "format"  # format is checked by black
]

[tool.pylint.reports]
output-format = "text"
reports = "no"

[tool.pylint.basic]
good-names = ["id", "db", "logger"]
bad-names = []


[tool.flake8]
ignore = [
    'E501',  # max line length -> handled by black
    'W503',  # handled by black
    'E203',  # whitespace before ':' -> that's how black reformats it
]
exclude = ['__pycache__']


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[[tool.mypy.overrides]]
module = "jose.*"
ignore_missing_imports = true


[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true
