"""initial table creation

Revision ID: 4f28ebf04082
Revises:
Create Date: 2023-10-24 06:03:30.926747

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "4f28ebf04082"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "availabilities",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("in_stock", sa.Boolean(), server_default="False", nullable=False),
        sa.Column("version", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_availabilities")),
    )
    op.create_table(
        "buyables",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("buyable", sa.Boolean(), server_default="False", nullable=False),
        sa.Column("version", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_buyables")),
    )
    op.create_table(
        "offers",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("product_id", sa.UUID(), nullable=False),
        sa.Column("shop_id", sa.UUID(), nullable=False),
        sa.Column(
            "country_code",
            sa.Enum(
                "BA", "BG", "HR", "CZ", "HU", "RO", "RS", "SI", "SK", name="countrycode"
            ),
            nullable=False,
        ),
        sa.Column(
            "currency_code",
            sa.Enum(
                "BAM",
                "EUR",
                "BGN",
                "HRK",
                "CZK",
                "HUF",
                "RON",
                "RSD",
                name="currencycode",
            ),
            nullable=False,
        ),
        sa.Column("amount", sa.Numeric(precision=12, scale=2), nullable=False),
        sa.Column("version", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_offers")),
    )
    op.create_index(
        op.f("ix_offers_country_code"), "offers", ["country_code"], unique=False
    )
    op.create_index(op.f("ix_offers_product_id"), "offers", ["product_id"], unique=False)
    op.create_table(
        "product_discounts",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "country_code",
            sa.Enum(
                "BA", "BG", "HR", "CZ", "HU", "RO", "RS", "SI", "SK", name="countrycode"
            ),
            nullable=False,
        ),
        sa.Column("discount", sa.Numeric(precision=5, scale=2), nullable=False),
        sa.Column(
            "price_type",
            sa.Enum(
                "ALL_OFFERS",
                "MARKETPLACE",
                "IN_STOCK",
                "IN_STOCK_CERTIFIED",
                name="productpricetype",
            ),
            nullable=False,
        ),
        sa.Column("version", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", "country_code", name=op.f("pk_product_discounts")),
    )
    op.create_table(
        "product_prices",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "country_code",
            sa.Enum(
                "BA", "BG", "HR", "CZ", "HU", "RO", "RS", "SI", "SK", name="countrycode"
            ),
            nullable=False,
        ),
        sa.Column(
            "currency_code",
            sa.Enum(
                "BAM",
                "EUR",
                "BGN",
                "HRK",
                "CZK",
                "HUF",
                "RON",
                "RSD",
                name="currencycode",
            ),
            nullable=False,
        ),
        sa.Column("min_price", sa.Numeric(precision=12, scale=2), nullable=False),
        sa.Column("max_price", sa.Numeric(precision=12, scale=2), nullable=False),
        sa.Column("avg_price", sa.Numeric(precision=12, scale=2), nullable=False),
        sa.Column(
            "price_type",
            sa.Enum(
                "ALL_OFFERS",
                "MARKETPLACE",
                "IN_STOCK",
                "IN_STOCK_CERTIFIED",
                name="productpricetype",
            ),
            nullable=False,
        ),
        sa.Column("version", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", "country_code", name=op.f("pk_product_prices")),
    )
    op.create_table(
        "product_prices_history",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "country_code",
            sa.Enum(
                "BA", "BG", "HR", "CZ", "HU", "RO", "RS", "SI", "SK", name="countrycode"
            ),
            nullable=False,
        ),
        sa.Column(
            "currency_code",
            sa.Enum(
                "BAM",
                "EUR",
                "BGN",
                "HRK",
                "CZK",
                "HUF",
                "RON",
                "RSD",
                name="currencycode",
            ),
            nullable=False,
        ),
        sa.Column("min_price", sa.Numeric(precision=12, scale=2), nullable=False),
        sa.Column("max_price", sa.Numeric(precision=12, scale=2), nullable=False),
        sa.Column("avg_price", sa.Numeric(precision=12, scale=2), nullable=False),
        sa.Column(
            "price_type",
            sa.Enum(
                "ALL_OFFERS",
                "MARKETPLACE",
                "IN_STOCK",
                "IN_STOCK_CERTIFIED",
                name="productpricetype",
            ),
            nullable=False,
        ),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("version", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint(
            "id", "country_code", "date", name=op.f("pk_product_prices_history")
        ),
        postgresql_partition_by="RANGE (date)",
    )
    op.create_table(
        "shops",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("certified", sa.Boolean(), server_default="False", nullable=False),
        sa.Column("verified", sa.Boolean(), server_default="False", nullable=False),
        sa.Column("paying", sa.Boolean(), server_default="False", nullable=False),
        sa.Column("enabled", sa.Boolean(), server_default="False", nullable=False),
        sa.Column("version", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_shops")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("shops")
    op.drop_table("product_prices_history")
    op.drop_table("product_prices")
    op.drop_table("product_discounts")
    op.drop_index(op.f("ix_offers_product_id"), table_name="offers")
    op.drop_index(op.f("ix_offers_country_code"), table_name="offers")
    op.drop_table("offers")
    op.drop_table("buyables")
    op.drop_table("availabilities")
    # ### end Alembic commands ###
